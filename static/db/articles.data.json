[
	{
		"id": 1,
		"slug": "typescript-tips-and-tricks",
		"title": "TypeScript Tips and Tricks",
		"description": "A collection of TypeScript tips and tricks",
		"author": "John Doe",
		"createdAt": "2019-01-01",
		"updatedAt": "2019-01-01",
		"content": "TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. Any browser. Any host. Any OS. Open source."
	},
	{
		"id": 2,
		"slug": "mongodb-tips-and-tricks",
		"title": "MongoDB Tips and Tricks",
		"description": "A collection of MongoDB tips and tricks",
		"author": "John Doe",
		"createdAt": "2019-01-03",
		"updatedAt": "2019-01-03",
		"content": "MongoDB is a general purpose, document-based, distributed database built for modern application developers and for the cloud era."
	},
	{
		"id": 3,
		"slug": "sveltekit-tips-and-tricks",
		"title": "SvelteKit Tips and Tricks",
		"description": "A collection of SvelteKit tips and tricks",
		"author": "John Doe",
		"createdAt": "2019-01-05",
		"updatedAt": "2019-01-05",
		"content": "SvelteKit is a framework for building web applications of all sizes, with a beautiful development experience and flexible filesystem-based routing."
	},
	{
		"id": 4,
		"slug": "how-to-use-promise-allsettled",
		"title": "How to Use: Promise.allSettled",
		"description": "A guide on how to use Promise.allSettled",
		"author": "John Doe",
		"createdAt": "2019-01-07",
		"updatedAt": "2019-01-07",
		"content": "Promise.allSettled is a new Promise static method that returns a promise that resolves after all of the given promises have either fulfilled or rejected, with an array of objects that each describes the outcome of each promise."
	},
	{
		"id": 5,
		"slug": "reasons-why-programming-is-incredible",
		"title": "Reasons Why Programming is Incredible",
		"description": "A list of reasons why programming is incredible",
		"author": "John Doe",
		"createdAt": "2019-01-09",
		"updatedAt": "2019-01-09",
		"content": "Programming is incredible because it allows you to create anything you can imagine."
	},
	{
		"id": 6,
		"slug": "how-to-use-array-prototype-map",
		"title": "How to Use: Array.prototype.map",
		"description": "A guide on how to use Array.prototype.map",
		"author": "John Doe",
		"createdAt": "2019-01-11",
		"updatedAt": "2019-01-11",
		"content": "The map() method creates a new array populated with the results of calling a provided function on every element in the calling array."
	},
	{
		"id": 7,
		"slug": "how-to-use-array-prototype-filter",
		"title": "How to Use: Array.prototype.filter",
		"description": "A guide on how to use Array.prototype.filter",
		"author": "John Doe",
		"createdAt": "2019-01-13",
		"updatedAt": "2019-01-13",
		"content": "The filter() method creates a new array with all elements that pass the test implemented by the provided function."
	},
	{
		"id": 8,
		"slug": "how-to-use-array-prototype-reduce",
		"title": "How to Use: Array.prototype.reduce",
		"description": "A guide on how to use Array.prototype.reduce",
		"author": "John Doe",
		"createdAt": "2019-01-15",
		"updatedAt": "2019-01-15",
		"content": "The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in a single output value."
	},
	{
		"id": 9,
		"slug": "how-to-use-array-prototype-foreach",
		"title": "How to Use: Array.prototype.forEach",
		"description": "A guide on how to use Array.prototype.forEach",
		"author": "John Doe",
		"createdAt": "2019-01-17",
		"updatedAt": "2019-01-17",
		"content": "The forEach() method executes a provided function once for each array element."
	},
	{
		"id": 10,
		"slug": "how-to-use-array-prototype-every",
		"title": "How to Use: Array.prototype.every",
		"description": "A guide on how to use Array.prototype.every",
		"author": "John Doe",
		"createdAt": "2019-01-19",
		"updatedAt": "2019-01-19",
		"content": "The every() method tests whether all elements in the array pass the test implemented by the provided function."
	},
	{
		"id": 11,
		"slug": "how-to-use-array-prototype-some",
		"title": "How to Use: Array.prototype.some",
		"description": "A guide on how to use Array.prototype.some",
		"author": "John Doe",
		"createdAt": "2019-01-21",
		"updatedAt": "2019-01-21",
		"content": "The some() method tests whether at least one element in the array passes the test implemented by the provided function."
	},
	{
		"id": 12,
		"slug": "how-to-use-array-prototype-find",
		"title": "How to Use: Array.prototype.find",
		"description": "A guide on how to use Array.prototype.find",
		"author": "John Doe",
		"createdAt": "2019-01-23",
		"updatedAt": "2019-01-23",
		"content": "The find() method returns the value of the first element in the provided array that satisfies the provided testing function."
	},
	{
		"id": 13,
		"slug": "how-to-use-array-prototype-findindex",
		"title": "How to Use: Array.prototype.findIndex",
		"description": "A guide on how to use Array.prototype.findIndex",
		"author": "John Doe",
		"createdAt": "2019-01-25",
		"updatedAt": "2019-01-25",
		"content": "The findIndex() method returns the index of the first element in the array that satisfies the provided testing function. Otherwise, it returns -1, indicating that no element passed the test."
	},
	{
		"id": 14,
		"slug": "how-to-use-array-prototype-includes",
		"title": "How to Use: Array.prototype.includes",
		"description": "A guide on how to use Array.prototype.includes",
		"author": "John Doe",
		"createdAt": "2019-01-27",
		"updatedAt": "2019-01-27",
		"content": "The includes() method determines whether an array includes a certain value among its entries, returning true or false as appropriate."
	},
	{
		"id": 15,
		"slug": "how-to-use-array-prototype-reverse",
		"title": "How to Use: Array.prototype.reverse",
		"description": "A guide on how to use Array.prototype.reverse",
		"author": "John Doe",
		"createdAt": "2019-01-29",
		"updatedAt": "2019-01-29",
		"content": "The reverse() method reverses an array in place. The first array element becomes the last, and the last array element becomes the first."
	},
	{
		"id": 16,
		"slug": "how-to-use-array-prototype-sort",
		"title": "How to Use: Array.prototype.sort",
		"description": "A guide on how to use Array.prototype.sort",
		"author": "John Doe",
		"createdAt": "2019-01-31",
		"updatedAt": "2019-01-31",
		"content": "The sort() method sorts the elements of an array in place and returns the sorted array. The default sort order is ascending, built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values."
	},
	{
		"id": 17,
		"slug": "how-to-use-array-prototype-flat",
		"title": "How to Use: Array.prototype.flat",
		"description": "A guide on how to use Array.prototype.flat",
		"author": "John Doe",
		"createdAt": "2019-02-02",
		"updatedAt": "2019-02-02",
		"content": "The flat() method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth."
	},
	{
		"id": 18,
		"slug": "how-to-use-array-prototype-flatmap",
		"title": "How to Use: Array.prototype.flatMap",
		"description": "A guide on how to use Array.prototype.flatMap",
		"author": "John Doe",
		"createdAt": "2019-02-04",
		"updatedAt": "2019-02-04",
		"content": "The flatMap() method first maps each element using a mapping function, then flattens the result into a new array. It is identical to a map() followed by a flat() of depth 1, but flatMap() is often quite useful, as merging both into one method is slightly more efficient."
	},
	{
		"id": 19,
		"slug": "how-to-use-array-prototype-keys",
		"title": "How to Use: Array.prototype.keys",
		"description": "A guide on how to use Array.prototype.keys",
		"author": "John Doe",
		"createdAt": "2019-02-06",
		"updatedAt": "2019-02-06",
		"content": "The keys() method returns a new Array Iterator object that contains the keys for each index in the array."
	},
	{
		"id": 20,
		"slug": "angular-tips-and-tricks",
		"title": "Angular Tips and Tricks",
		"description": "A collection of Angular tips and tricks",
		"author": "John Doe",
		"createdAt": "2019-02-08",
		"updatedAt": "2019-02-08",
		"content": "Angular is a platform for building mobile and desktop web applications."
	},
	{
		"id": 21,
		"slug": "react-tips-and-tricks",
		"title": "React Tips and Tricks",
		"description": "A collection of React tips and tricks",
		"author": "John Doe",
		"createdAt": "2019-02-10",
		"updatedAt": "2019-02-10",
		"content": "React is a JavaScript library for building user interfaces."
	},
	{
		"id": 22,
		"slug": "svelte-tips-and-tricks",
		"title": "Vue Tips and Tricks",
		"description": "A collection of Vue tips and tricks",
		"author": "John Doe",
		"createdAt": "2019-02-12",
		"updatedAt": "2019-02-12",
		"content": "Vue is a progressive framework for building user interfaces."
	},
	{
		"id": 24,
		"slug": "nextjs-tips-and-tricks",
		"title": "Next.js Tips and Tricks",
		"description": "A collection of Next.js tips and tricks",
		"author": "John Doe",
		"createdAt": "2019-02-16",
		"updatedAt": "2019-02-16",
		"content": "Next.js is a framework for building server-side rendered and statically generated React applications using React."
	},
	{
		"id": 25,
		"slug": "nuxtjs-tips-and-tricks",
		"title": "Nuxt.js Tips and Tricks",
		"description": "A collection of Nuxt.js tips and tricks",
		"author": "John Doe",
		"createdAt": "2019-02-18",
		"updatedAt": "2019-02-18",
		"content": "Nuxt.js is a framework for building server side rendered and statically generated Vue.js applications using Vue.js."
	}
]
